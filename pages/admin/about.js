import withAuth from "@/components/Auth/withAuth";
import AboutSection from "@/components/admin/AboutSection";
import Foreword from "@/components/admin/Foreword";
import MissionSection from "@/components/admin/MissionSection";
import Navbar from "@/components/admin/Navbar";
import Sidebar from "@/components/admin/Sidebar";
import VisionSection from "@/components/admin/VIsionSection";
import fetcher from "@/helpers/fetcher";
import styles from "@/styles/Main.module.scss";
import Head from "next/head";
import { useEffect, useState } from "react";
import { RingLoader } from "react-spinners";

const API_URL = process.env.NEXT_PUBLIC_API_URL;

export const getForewordData = async () => {
  const params = {
    method: "GET",
    url: API_URL + "about/foreword",
    type: "json",
  };
  return await fetcher(params).then((json) => (json ? json : []));
};

export const getMissionData = async () => {
  const params = {
    method: "GET",
    url: API_URL + "about/mission",
    type: "json",
  };
  return await fetcher(params).then((json) => (json ? json : []));
};

export const getVisionData = async () => {
  const params = {
    method: "GET",
    url: API_URL + "about/vision",
    type: "json",
  };
  return await fetcher(params).then((json) => (json ? json : []));
};

export const getAboutDescData = async () => {
  const params = {
    method: "GET",
    url: API_URL + "about/description",
    type: "json",
  };
  return await fetcher(params).then((json) => (json ? json : []));
};

const About = () => {
  const [forewordData, setForewordData] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const [aboutData, setAboutData] = useState([]);
  const [missionData, setMissionData] = useState([]);
  const [visionData, setVisionData] = useState([]);

  useEffect(() => {
    getForewordData().then((result) => {
      setForewordData(result);
      getAboutDescData().then((result) => {
        setAboutData(result);
        getMissionData().then((result) => {
          setMissionData(result);
          getVisionData().then((result) => {
            setVisionData(result);
          });
        });
      });
    });
    
  }, []);

  useEffect(() => {
    if (forewordData.length > 0 && aboutData.length > 0 && missionData.length > 0 && visionData.length > 0) {
      setIsLoading(false);
    }
  }, [forewordData, aboutData, missionData, visionData])

  const handleSaveForeword = () => {
    getForewordData().then((result) => {
      setForewordData(result);
    });
  };
  
  const handleSaveAbout = () => {
    getAboutDescData().then((result) => {
      setAboutData(result);
    });
  };

  const handleSaveMission = () => {
    getMissionData().then((result) => {
      setMissionData(result);
    });
  };

  const handleSaveVision = () => {
    getVisionData().then((result) => {
      setVisionData(result);
    });
  };
  
  return (
    <div className={styles.body}>
      <Head>
        <title>{process.env.NEXT_PUBLIC_NAME}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/img/svg/logo.svg" />
      </Head>
      {isLoading ? (
        <div className="fixed inset-0 flex items-center justify-center z-50 bg-black font-semibold text-xl text-white">
          <RingLoader color="#0894da" size={80} /> Loading...
        </div>
      ) : (
        <>
          <Navbar />
          <Sidebar />
          <div className="ml-52 bg-gray-900">
            <Foreword data={forewordData} onSave={handleSaveForeword} />
            <AboutSection data={aboutData} onSave={handleSaveAbout}/>
            <MissionSection data={missionData} onSave={handleSaveMission} />
            <VisionSection data={visionData} onSave={handleSaveVision} />
          </div>
        </>
      )}
    </div>
  );
};

export default withAuth(About);
