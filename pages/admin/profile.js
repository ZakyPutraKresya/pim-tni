import withAuth from "@/components/Auth/withAuth";
import DataEvents, { API_URL } from "@/components/admin/DataEvents";
import DataGallery from "@/components/admin/DataGallery";
import Navbar from "@/components/admin/Navbar";
import Sidebar from "@/components/admin/Sidebar";
import TitleTeam, {
  getHeaderTeam,
  getListTeam,
} from "@/components/admin/TitleTeam";
import fetcher from "@/helpers/fetcher";
import styles from "@/styles/Main.module.scss";
import Head from "next/head";
import React, { useEffect, useState } from "react";
import { RingLoader } from "react-spinners";

export const getProfileData = async () => {
  const params = {
    method: "GET",
    url: API_URL + "profile",
    type: "json",
  };
  return await fetcher(params).then((json) => (json ? json : []));
};

const Profile = () => {
  const [data, setData] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [title, setTitle] = useState(null);
  const [address, setAddress] = useState(null);
  const [email, setEmail] = useState(null);
  const [phone, setPhone] = useState(null);
  const [fax, setFax] = useState(null);

  useEffect(() => {
    getProfileData().then((data) => {
      setTitle(data[0].title);
      setAddress(data[0].address);
      setEmail(data[0].email);
      setPhone(data[0].phone);
      setFax(data[0].fax);
      setIsLoading(false);
      setData(data);
    });
  }, []);
  const handleSaveListChanges = () => {
    getProfileData().then((result) => {
      setData(result);
    });
  };
  const handleEditClick = () => {
    setIsModalOpen(true);
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    const body = new FormData();
    body.append("file", e.target.file.files[0]);
    body.append("title", title);
    body.append("address", address);
    body.append("phone", phone);
    body.append("fax", fax);
    body.append("email", email);
    const response = await fetch(API_URL+"profile/editList", {
      method: "POST",
      body,
    });

    if (response.ok) {
      const data = await response.json();
      handleSaveListChanges();
      setIsModalOpen(false);
      alert(data.message); // Menampilkan pesan dari respons dalam sebuah alert
    } else {
      alert("Terjadi kesalahan saat mengunggah file."); // Menampilkan pesan kesalahan default jika respons tidak berhasil
    }
  };

  const handleModalClose = () => {
    setIsModalOpen(false);
  };
  return (
    <div className={styles.body}>
      <Head>
        <title>{process.env.NEXT_PUBLIC_NAME}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/img/svg/logo.svg" />
      </Head>
      {isLoading ? (
        <div className="fixed inset-0 flex items-center justify-center z-50 bg-black font-semibold text-xl text-white">
          <RingLoader color="#0894da" size={80} /> Loading...
        </div>
      ) : (
        <>
          <Navbar />
          <Sidebar />
          <div className="bg-gray-900 pt-10 ml-52 h-[500px] text-white">
            <div className="footer bg-gray-900 text-center">
              <div className="md:col-span-2 xl:col-span-3 flex justify-center items-center my-10">
                <button
                  className="bg-blue-500 text-white px-5 py-2 mb-3 absolute right-[145px] rounded"
                  onClick={handleEditClick}
                >
                  Edit
                </button>
              </div>
              <div className="w-80 mx-auto">
                  <img
                    src={API_URL + "uploads/" + data[0].image}
                    alt="MABES TNI"
                    className="w-auto"
                  />
              </div>
              <strong className="block mt-3">{title}</strong>
              <div className="text-xs">{address}</div>
              <div className="text-xs mt-1">
                Contact Us:
                <br />
                Email: {email}
                <br />
                Phone: {phone}
                <br />
                Fax: {fax}
              </div>
            </div>
          </div>
          {isModalOpen && (
            <div className="fixed top-0 left-0 w-full h-full flex items-center justify-center z-50">
              <div className="fixed top-0 left-0 w-full h-full bg-black opacity-50"></div>
              <div
                className="dark:bg-gray-800 rounded-lg z-10 absolute p-4 w-[700px] shadow-md"
                // style={{ maxHeight: 600 }}
              >
                <form onSubmit={handleSubmit}>
                  <div className="mb-4">
                    <label className="block text-gray-200 text-sm font-bold mb-2">
                      New Title:
                    </label>
                    <input
                      type="text"
                      value={title}
                      onChange={(e) => setTitle(e.target.value)}
                      className="appearance-none w-full py-2 px-3 text-gray-200 leading-tight focus:outline-none focus:shadow-outline bg-gray-600 rounded"
                    />
                  </div>
                  <div className="mb-4">
                    <label className="block text-gray-200 text-sm font-bold mb-2">
                      New Address:
                    </label>
                    <textarea
                      value={address}
                      onChange={(e) => setAddress(e.target.value)}
                      className="appearance-none w-full py-2 px-3 text-gray-200 leading-tight focus:outline-none focus:shadow-outline bg-gray-600 rounded"
                      rows="4"
                    ></textarea>
                  </div>
                  <div className="mb-4">
                    <label className="block text-gray-200 text-sm font-bold mb-2">
                      New Email:
                    </label>
                    <input
                      type="text"
                      value={email}
                      onChange={(e) => setEmail(e.target.value)}
                      className="appearance-none w-full py-2 px-3 text-gray-200 leading-tight focus:outline-none focus:shadow-outline bg-gray-600 rounded"
                    />
                  </div>
                  <div className="mb-4">
                    <label className="block text-gray-200 text-sm font-bold mb-2">
                      New Phone:
                    </label>
                    <input
                      type="text"
                      value={phone}
                      onChange={(e) => setPhone(e.target.value)}
                      className="appearance-none w-full py-2 px-3 text-gray-200 leading-tight focus:outline-none focus:shadow-outline bg-gray-600 rounded"
                    />
                  </div>
                  <div className="mb-4">
                    <label className="block text-gray-200 text-sm font-bold mb-2">
                      New Fax:
                    </label>
                    <input
                      type="text"
                      value={fax}
                      onChange={(e) => setFax(e.target.value)}
                      className="appearance-none w-full py-2 px-3 text-gray-200 leading-tight focus:outline-none focus:shadow-outline bg-gray-600 rounded"
                    />
                  </div>
                  <div className="mb-4">
                  <label className="block text-gray-200 text-sm font-bold mb-2">
                    New Image File:
                  </label>
                  <input
                    type="file"
                    accept="image/*"
                    name="file"
                    className="appearance-none w-full py-2 px-3 text-gray-200 leading-tight focus:outline-none focus:shadow-outline"
                  />
                </div>
                  <div className="flex justify-end">
                    <button
                      onClick={handleModalClose}
                      className="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded mr-2"
                    >
                      Cancel
                    </button>
                    <button
                      type="submit"
                      className="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded"
                    >
                      Save Changes
                    </button>
                  </div>
                </form>
              </div>
            </div>
          )}
        </>
      )}
    </div>
  );
};

export default withAuth(Profile);
