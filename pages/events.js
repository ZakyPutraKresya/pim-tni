import Navbar from "@/components/Navbar";
import React, { useEffect, useState } from "react";
import styles from "@/styles/Main.module.scss";
import CarouselSmall from "@/components/CarouselSmall";
import Breadcrumbs from "@/components/Breadcrumbs";
import Head from "next/head";
import EventsSection from "@/components/EventsSection";
import NewsModal from "@/components/NewsModal";
import Footer from "@/components/Footer";
import { getEventsData } from "./admin/events";
import { useRouter } from "next/router";

const Events = () => {
  const [selectedYear, setSelectedYear] = useState(null);
  const [modalOpen, setModalOpen] = useState(false);
  const [selectedEvent, setSelectedEvent] = useState(null);
  const [eventsData, setEventsData] = useState([]);
  const [breadcrumbs, setBreadcrumbs] = useState([
    { text: 'Home', link: '/' },
    { text: 'Events' },
  ]);
  const router = useRouter();
  const { id } = router.query; // Ambil ID acara dari URL
  const decodedEventId = id ? atob(id) : null;

  useEffect(() => {
    // Cek jika ada ID acara dalam URL
    if (decodedEventId) {
      // Temukan data acara yang sesuai dengan ID dalam eventsData
      const matchedEvent = eventsData.find((event) => event.id == decodedEventId);

      // Jika ada data acara yang cocok, tampilkan modal
      if (matchedEvent) {
        openModal(matchedEvent)
      }
    } else {
      // Jika tidak ada ID acara dalam URL atau tidak ada cocok dengan data acara, tutup modal
      setModalOpen(false);
      setSelectedEvent(null);
    }
  }, [decodedEventId, eventsData]);
  useEffect(() => {
    getEventsData().then((result) => {
      setEventsData(result)
    })
  }, [])
  useEffect(() => {
    if (selectedYear) {
      setBreadcrumbs([
        { text: "Home", link: "/" },
        { text: "Events", link: "/events" },
        { text: selectedYear },
      ]);
    } else {
      setBreadcrumbs([{ text: "Home", link: "/" }, { text: "Events" }]);
    }
  }, [selectedYear]);

  const openModal = (event) => {
    setSelectedEvent(event);
    setModalOpen(true);
  };

  const closeModal = () => {
    setSelectedEvent(null);
    setModalOpen(false);
  };

  const carouselImg =
    "/img/jpg/header.jpg";
  const titlePage = "";
  const handleYearClick = (year) => {
    setSelectedYear(year);
  };
  return (
    <div className={styles.body}>
      <Head>
        <title>{process.env.NEXT_PUBLIC_NAME} - Events</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/img/svg/logo.svg" />
      </Head>
      <Navbar />
      <CarouselSmall headerImg={carouselImg} titlePage={titlePage} />
      <Breadcrumbs data={breadcrumbs} />
      <EventsSection events={eventsData} onYearClick={handleYearClick} onEventClick={openModal} />
      <NewsModal
        isOpen={modalOpen}
        closeModal={closeModal}
        modalData={selectedEvent}
      />
      <Footer></Footer>
    </div>
  );
};

export default Events;
